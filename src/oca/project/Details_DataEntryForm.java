/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package oca.project;

import java.io.*;
import java.awt.Color;
import java.text.ParseException;
import java.util.Date;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.GregorianCalendar;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import oca.project.managers.Manager;
import oca.project.subordinates.ContractSubordinate;
import oca.project.subordinates.SalariedSubordinate;


/**
 *
 * @author 92016097s
 */
public class Details_DataEntryForm extends javax.swing.JFrame {
    private static boolean isFirstPaymentMade = false;
    private final DateDetails currentDates;
    private final GregorianCalendar fortnightlyCal = new GregorianCalendar();
    private final GregorianCalendar monthlyCal = new GregorianCalendar();
    private final SimpleDateFormat dateFormatter = new SimpleDateFormat("dd/MM/yyyy");
    private final Date initalFortnightDate = dateFormatter.parse("01/01/2015");
    private final Date initialMonthlyDate = dateFormatter.parse("01/01/2015");
    private final Employees employees = OCAProject.getEmployees();
    private final IPaidPerson[] listOfEmployees = employees.getAllEmployees();
    private ISalariedPerson[] salariedEmployees;
    private ArrayList<ISalariedPerson> arrayOfEmployees;
    private final ArrayList<PayrollReportItem> payRollReportItems = new ArrayList<>();
    
    /**
     * Creates new form mainForm
     */
    
    public Details_DataEntryForm() throws ParseException, FileNotFoundException, IOException {
        initComponents();
        getContentPane().setBackground(new Color(16,188,212));
        for(IPaidPerson person : listOfEmployees) {
            cboName.addItem(person);
        }
        lblHoursOfWork.setVisible(false);
        txtHoursOfWork.setVisible(false);
        lblHourlyRate.setVisible(false);
        txtHourlyRate.setVisible(false);
        btnAdd.setVisible(false);
        generateCEO( (Person) cboName.getSelectedItem());
        currentDates = OCAProject.getCurrentDates();
        
        if (isFirstPaymentMade == false) {
            fortnightlyCal.setTime(initalFortnightDate);
            isFirstPaymentMade = true;
        }
        else if (isFirstPaymentMade == true) {
            fortnightlyCal.setTime(initalFortnightDate);
        }
    }
    
    private void generateCEO(Person person) {
        txtDOB.setText(person.getDOB());
        txtDOB.setDisabledTextColor(Color.gray);
        txtStartDate.setText(person.getstartDate());
        txtStartDate.setDisabledTextColor(Color.gray);
        if (person instanceof CEO) {
            CEO ceo = (CEO) person;
            lstContractor.setSelectedIndex(1);
            txtTimePeriods.setText(ceo.getTimePeriod().toString());
            txtTimePeriods.setDisabledTextColor(Color.gray);
            lblSalariedOrContractor.setText("Salaried Worker -");
            lblPayPeriodOrBaseSalary.setText("Base Salary:");
            txtPayPeriodOrBaseSalary.setText("$" + Double.toString(ceo.getSalaryInformation().getBaseSalary()));
            txtPayPeriodOrBaseSalary.setEnabled(false);
            txtPayPeriodOrBaseSalary.setDisabledTextColor(Color.gray);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jFrame1 = new javax.swing.JFrame();
        btnAssignBonus1 = new javax.swing.JButton();
        btnDetails_DataEntry1 = new javax.swing.JButton();
        btnRun_Reports1 = new javax.swing.JButton();
        btnClose1 = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        lblBestITPayroll1 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        btnMonthlyPayments = new javax.swing.JButton();
        btnFortnightlyPayments = new javax.swing.JButton();
        lblAddPayments1 = new javax.swing.JLabel();
        btnBack = new javax.swing.JButton();
        lblName = new javax.swing.JLabel();
        lblDOB = new javax.swing.JLabel();
        cboName = new javax.swing.JComboBox();
        txtDOB = new javax.swing.JTextField();
        lblStartDate = new javax.swing.JLabel();
        txtStartDate = new javax.swing.JTextField();
        lblContractor = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        lstContractor = new javax.swing.JList();
        lblTimePeriod = new javax.swing.JLabel();
        lblPersonalInformation = new javax.swing.JLabel();
        txtTimePeriods = new javax.swing.JTextField();
        lblPayPeriodOrBaseSalary = new javax.swing.JLabel();
        txtHourlyRate = new javax.swing.JTextField();
        lblSalariedOrContractor = new javax.swing.JLabel();
        lblHoursOfWork = new javax.swing.JLabel();
        lblHourlyRate = new javax.swing.JLabel();
        txtPayPeriodOrBaseSalary = new javax.swing.JTextField();
        txtHoursOfWork = new javax.swing.JTextField();
        btnAdd = new javax.swing.JButton();

        jFrame1.setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        jFrame1.setAutoRequestFocus(false);
        jFrame1.setBackground(new java.awt.Color(16, 188, 212));

        btnAssignBonus1.setBackground(new java.awt.Color(68, 199, 54));
        btnAssignBonus1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnAssignBonus1.setForeground(new java.awt.Color(255, 255, 255));
        btnAssignBonus1.setMnemonic('a');
        btnAssignBonus1.setText("Assign Bonus");

        btnDetails_DataEntry1.setBackground(new java.awt.Color(68, 199, 54));
        btnDetails_DataEntry1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnDetails_DataEntry1.setForeground(new java.awt.Color(255, 255, 255));
        btnDetails_DataEntry1.setMnemonic('p');
        btnDetails_DataEntry1.setText("Personal Details and Contractor Data Entry");

        btnRun_Reports1.setBackground(new java.awt.Color(68, 199, 54));
        btnRun_Reports1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnRun_Reports1.setForeground(new java.awt.Color(255, 255, 255));
        btnRun_Reports1.setMnemonic('r');
        btnRun_Reports1.setText("Run Reports");

        btnClose1.setBackground(new java.awt.Color(102, 102, 102));
        btnClose1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnClose1.setForeground(new java.awt.Color(255, 255, 255));
        btnClose1.setMnemonic('c');
        btnClose1.setText("Close");

        jPanel2.setBackground(new java.awt.Color(65, 65, 65));
        jPanel2.setForeground(new java.awt.Color(255, 255, 255));

        lblBestITPayroll1.setFont(new java.awt.Font("Maiandra GD", 1, 53)); // NOI18N
        lblBestITPayroll1.setForeground(new java.awt.Color(255, 255, 255));
        lblBestITPayroll1.setText("Best IT Payroll");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(0, 12, Short.MAX_VALUE)
                .addComponent(lblBestITPayroll1, javax.swing.GroupLayout.PREFERRED_SIZE, 388, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lblBestITPayroll1, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        javax.swing.GroupLayout jFrame1Layout = new javax.swing.GroupLayout(jFrame1.getContentPane());
        jFrame1.getContentPane().setLayout(jFrame1Layout);
        jFrame1Layout.setHorizontalGroup(
            jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jFrame1Layout.createSequentialGroup()
                .addGap(151, 151, 151)
                .addGroup(jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnRun_Reports1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnDetails_DataEntry1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnAssignBonus1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(142, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jFrame1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnClose1, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(37, 37, 37))
        );
        jFrame1Layout.setVerticalGroup(
            jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jFrame1Layout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(44, 44, 44)
                .addComponent(btnAssignBonus1, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnDetails_DataEntry1, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnRun_Reports1, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 34, Short.MAX_VALUE)
                .addComponent(btnClose1, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(33, 33, 33))
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setAutoRequestFocus(false);
        setBackground(new java.awt.Color(16, 188, 212));
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(16, 188, 212));
        jPanel1.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 0, 1, new java.awt.Color(0, 0, 0)));

        btnMonthlyPayments.setBackground(new java.awt.Color(68, 199, 54));
        btnMonthlyPayments.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnMonthlyPayments.setForeground(new java.awt.Color(255, 255, 255));
        btnMonthlyPayments.setMnemonic('m');
        btnMonthlyPayments.setText("Create Monthly Payments");
        btnMonthlyPayments.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMonthlyPaymentsActionPerformed(evt);
            }
        });

        btnFortnightlyPayments.setBackground(new java.awt.Color(68, 199, 54));
        btnFortnightlyPayments.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnFortnightlyPayments.setForeground(new java.awt.Color(255, 255, 255));
        btnFortnightlyPayments.setMnemonic('f');
        btnFortnightlyPayments.setText("Create Fortnightly Payments");
        btnFortnightlyPayments.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFortnightlyPaymentsActionPerformed(evt);
            }
        });

        lblAddPayments1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/oca/project/AddPayments.jpg"))); // NOI18N
        lblAddPayments1.setText("jLabel1");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(90, 90, 90)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(btnMonthlyPayments, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnFortnightlyPayments, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(68, 68, 68)
                        .addComponent(lblAddPayments1, javax.swing.GroupLayout.PREFERRED_SIZE, 311, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(78, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addComponent(lblAddPayments1)
                .addGap(31, 31, 31)
                .addComponent(btnFortnightlyPayments, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnMonthlyPayments, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        btnBack.setBackground(new java.awt.Color(102, 102, 102));
        btnBack.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnBack.setForeground(new java.awt.Color(255, 255, 255));
        btnBack.setMnemonic('b');
        btnBack.setText("Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        lblName.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        lblName.setForeground(new java.awt.Color(255, 255, 255));
        lblName.setText("Name:");

        lblDOB.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        lblDOB.setForeground(new java.awt.Color(255, 255, 255));
        lblDOB.setText("Date of Birth:");

        cboName.setEditable(true);
        cboName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboNameActionPerformed(evt);
            }
        });

        txtDOB.setEnabled(false);

        lblStartDate.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        lblStartDate.setForeground(new java.awt.Color(255, 255, 255));
        lblStartDate.setText("Start Date:");

        txtStartDate.setEnabled(false);

        lblContractor.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        lblContractor.setForeground(new java.awt.Color(255, 255, 255));
        lblContractor.setText("Contractor:");

        lstContractor.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Yes", "No" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        lstContractor.setEnabled(false);
        jScrollPane1.setViewportView(lstContractor);

        lblTimePeriod.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        lblTimePeriod.setForeground(new java.awt.Color(255, 255, 255));
        lblTimePeriod.setText("Time Period:");

        lblPersonalInformation.setIcon(new javax.swing.ImageIcon(getClass().getResource("/oca/project/PersonalInformation.jpg"))); // NOI18N
        lblPersonalInformation.setText("jLabel1");

        txtTimePeriods.setEnabled(false);

        lblPayPeriodOrBaseSalary.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        lblPayPeriodOrBaseSalary.setForeground(new java.awt.Color(255, 255, 255));
        lblPayPeriodOrBaseSalary.setText("PayPeriodOrBaseSalary");

        txtHourlyRate.setEditable(false);
        txtHourlyRate.setEnabled(false);

        lblSalariedOrContractor.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        lblSalariedOrContractor.setForeground(new java.awt.Color(255, 255, 255));
        lblSalariedOrContractor.setText("salariedOrContractor");

        lblHoursOfWork.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        lblHoursOfWork.setForeground(new java.awt.Color(255, 255, 255));
        lblHoursOfWork.setText("Hours of Work:");

        lblHourlyRate.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        lblHourlyRate.setForeground(new java.awt.Color(255, 255, 255));
        lblHourlyRate.setText("Hourly Rate:");

        btnAdd.setBackground(new java.awt.Color(102, 102, 102));
        btnAdd.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnAdd.setForeground(new java.awt.Color(255, 255, 255));
        btnAdd.setMnemonic('a');
        btnAdd.setText("Add");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(btnBack, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap())
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(lblName)
                                            .addComponent(lblDOB)
                                            .addComponent(lblStartDate)
                                            .addComponent(lblContractor)
                                            .addComponent(lblTimePeriod))
                                        .addGap(67, 67, 67)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(cboName, javax.swing.GroupLayout.PREFERRED_SIZE, 327, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(txtDOB, javax.swing.GroupLayout.PREFERRED_SIZE, 217, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(txtTimePeriods, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(txtStartDate, javax.swing.GroupLayout.PREFERRED_SIZE, 217, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(lblPayPeriodOrBaseSalary)
                                            .addComponent(lblHoursOfWork)
                                            .addComponent(lblSalariedOrContractor)
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                                .addComponent(btnAdd, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(lblHourlyRate, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(txtHourlyRate, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(txtPayPeriodOrBaseSalary, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(txtHoursOfWork, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                .addGap(0, 92, Short.MAX_VALUE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(82, 82, 82)
                        .addComponent(lblPersonalInformation, javax.swing.GroupLayout.PREFERRED_SIZE, 449, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 101, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(lblPersonalInformation)
                .addGap(34, 34, 34)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cboName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblName))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblDOB)
                    .addComponent(txtDOB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblStartDate)
                    .addComponent(txtStartDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblContractor))
                .addGap(19, 19, 19)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblTimePeriod)
                    .addComponent(txtTimePeriods, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(61, 61, 61)
                .addComponent(lblSalariedOrContractor)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblPayPeriodOrBaseSalary)
                    .addComponent(txtPayPeriodOrBaseSalary, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblHoursOfWork)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(txtHoursOfWork, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtHourlyRate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblHourlyRate))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnAdd)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 46, Short.MAX_VALUE)
                .addComponent(btnBack, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        this.dispose();
        mainForm form = new mainForm();
        form.setVisible(true);
    }//GEN-LAST:event_btnBackActionPerformed

    private void cboNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboNameActionPerformed
        Person person = (Person) cboName.getSelectedItem();
        txtDOB.setText(person.getDOB());
        txtDOB.setDisabledTextColor(Color.gray);
        txtStartDate.setText(person.getstartDate());
        txtStartDate.setDisabledTextColor(Color.gray);
        if (cboName.getSelectedItem() instanceof ContractSubordinate == false && cboName.getSelectedItem() instanceof CEO == false) {
            ISalariedPerson salariedPerson = (ISalariedPerson) person;
            txtTimePeriods.setText(salariedPerson.getTimePeriod().toString());
            lstContractor.setSelectedIndex(1);
            txtPayPeriodOrBaseSalary.setEnabled(false);
            if (salariedPerson instanceof IManager) {
                Manager manager = (Manager) salariedPerson;
                txtHourlyRate.setText("$" + Double.toString(manager.getBaseSalary()));
                lblSalariedOrContractor.setText("Salaried Worker -");
                lblPayPeriodOrBaseSalary.setText("Base Salary:");
                txtPayPeriodOrBaseSalary.setText("$" + Double.toString(manager.getBaseSalary()));
                txtPayPeriodOrBaseSalary.setDisabledTextColor(Color.gray);
            }
            else {
                SalariedSubordinate salariedSubordinate = (SalariedSubordinate) salariedPerson;
                txtHourlyRate.setText("$" + Double.toString(salariedSubordinate.getBaseSalary()));
                lblSalariedOrContractor.setText("Salaried Worker -");
                lblPayPeriodOrBaseSalary.setText("Base Salary:");
                txtPayPeriodOrBaseSalary.setText("$" + Double.toString(salariedSubordinate.getBaseSalary()));
                txtPayPeriodOrBaseSalary.setDisabledTextColor(Color.gray);
            }
        }
        else if (cboName.getSelectedItem() instanceof ContractSubordinate == true) {
            txtPayPeriodOrBaseSalary.setText("");
            ContractSubordinate contractor = (ContractSubordinate) cboName.getSelectedItem();
            txtTimePeriods.setText(TimePeriods.MONTHLY.toString());
            lstContractor.setSelectedIndex(0);
            lblSalariedOrContractor.setText("Contractor Worker -");
            lblPayPeriodOrBaseSalary.setText("Start date of pay period:");
            txtPayPeriodOrBaseSalary.setEnabled(true);
            lblHoursOfWork.setVisible(true);
            txtHoursOfWork.setVisible(true);
            txtHoursOfWork.setText("");
            lblHourlyRate.setVisible(true);
            txtHourlyRate.setVisible(true);
            txtHourlyRate.setText("$" + Double.toString(contractor.getHourlyRate()));
            txtHourlyRate.setDisabledTextColor(Color.gray);
            btnAdd.setVisible(true);
        }
        else if(person instanceof CEO) {
            generateCEO(person);
        }
    }//GEN-LAST:event_cboNameActionPerformed

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        ContractSubordinate contractor = (ContractSubordinate) cboName.getSelectedItem();
        Date startDateOfPayPeriod;
        if(txtPayPeriodOrBaseSalary.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "Please enter start date of pay period", "Error", JOptionPane.ERROR_MESSAGE);
            txtPayPeriodOrBaseSalary.requestFocus();
        }
        else if(txtHoursOfWork.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "Please enter number of hours of work", "Error", JOptionPane.ERROR_MESSAGE);
            txtHoursOfWork.requestFocus();
        }
        else {
            try {  
                startDateOfPayPeriod = dateFormatter.parse(txtPayPeriodOrBaseSalary.getText());
                Double amountToPay = contractor.calculatePay(startDateOfPayPeriod, Double.parseDouble(txtHoursOfWork.getText()));
                PayrollReportItem payrollReportItem = new PayrollReportItem(contractor, amountToPay, startDateOfPayPeriod, contractor.getTimePeriods());
                PayrollReportsForm.setpayRollReportItems(payrollReportItem);
                JOptionPane.showMessageDialog(this, "Contract payment of $" + amountToPay + " has been added" , "Announcement", JOptionPane.INFORMATION_MESSAGE);
                txtPayPeriodOrBaseSalary.setText("");
                txtHoursOfWork.setText("");
            }   
            catch(ParseException pe) {
               JOptionPane.showMessageDialog(this, "please enter a valid date using the format (dd/mm/yyyy)", "Error", JOptionPane.ERROR_MESSAGE);
               txtPayPeriodOrBaseSalary.requestFocus();
               txtPayPeriodOrBaseSalary.selectAll();
            }    
        }
    }//GEN-LAST:event_btnAddActionPerformed

    private void btnFortnightlyPaymentsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFortnightlyPaymentsActionPerformed
        JOptionPane.showMessageDialog(this, "Fortnightly payments have been added for " + dateFormatter.format(OCAProject.getCurrentDates().getFortnightlyCal().getTime()), "Announcement", JOptionPane.INFORMATION_MESSAGE);
        Employees employees = OCAProject.getEmployees();
        arrayOfEmployees = new ArrayList<>();
        salariedEmployees = employees.getSalariedEmployees();
        for (ISalariedPerson employee : salariedEmployees) {
            arrayOfEmployees.add(employee);
        }
        for(ISalariedPerson employee : arrayOfEmployees) {
            if(employee instanceof IManager && employee.getTimePeriod() == TimePeriods.FORTNIGHTLY) {
                Manager manager = (Manager) employee;
                PayrollReportItem payrollReportItem = new PayrollReportItem(manager, manager.getBaseSalary(), OCAProject.20172017.getFortnightlyCal().getTime(), manager.getTimePeriod());
                PayrollReportsForm.setpayRollReportItems(payrollReportItem);
            }
            else if (employee instanceof IManager == false && employee.getTimePeriod() == TimePeriods.FORTNIGHTLY){
                SalariedSubordinate salariedSubordinate = (SalariedSubordinate) employee;
                PayrollReportItem payrollReportItem = new PayrollReportItem(salariedSubordinate, salariedSubordinate.getBaseSalary(), OCAProject.getCurrentDates().getFortnightlyCal().getTime(), employee.getTimePeriod());
                PayrollReportsForm.setpayRollReportItems(payrollReportItem);
            }
        }
            OCAProject.getCurrentDates().addFortnightlyCal();
    }//GEN-LAST:event_btnFortnightlyPaymentsActionPerformed

    private void btnMonthlyPaymentsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMonthlyPaymentsActionPerformed
        int numOfDaysToIncrement = 0;
        switch ((OCAProject.getCurrentDates().getMonthlyCal().get(Calendar.MONTH))){
            case 1:
                LeapYearCheck yearToTest = new LeapYearCheck(OCAProject.getCurrentDates().getMonthlyCal().get(Calendar.YEAR));
                if(yearToTest.isLeapYear() == true) {
                    JOptionPane.showMessageDialog(this, "Monthly payments have been added for " + dateFormatter.format(OCAProject.getCurrentDates().getMonthlyCal().getTime()), "Announcement", JOptionPane.INFORMATION_MESSAGE);
                    numOfDaysToIncrement = 29;
                }
                else {
                    JOptionPane.showMessageDialog(this, "Monthly payments have been added for " + dateFormatter.format(OCAProject.getCurrentDates().getMonthlyCal().getTime()), "Announcement", JOptionPane.INFORMATION_MESSAGE);
                    numOfDaysToIncrement = 28;
                }
                break;
            case 3:
            case 5:
            case 8:
            case 10:
                JOptionPane.showMessageDialog(this, "Monthly payments have been added for " + dateFormatter.format(OCAProject.getCurrentDates().getMonthlyCal().getTime()), "Announcement", JOptionPane.INFORMATION_MESSAGE);
                numOfDaysToIncrement = 30;
                break;
            case 0:
            case 2:
            case 4:
            case 6:
            case 7:
            case 9:
            case 11:
                JOptionPane.showMessageDialog(this, "Monthly payments have been added for " + dateFormatter.format(OCAProject.getCurrentDates().getMonthlyCal().getTime()), "Announcement", JOptionPane.INFORMATION_MESSAGE);
                numOfDaysToIncrement = 31;
                break;
        }
        Employees employees = OCAProject.getEmployees();
        arrayOfEmployees = new ArrayList<>();
        salariedEmployees = employees.getSalariedEmployees();
        for (ISalariedPerson employee : salariedEmployees) {
            arrayOfEmployees.add(employee);
        }
        for(ISalariedPerson employee : arrayOfEmployees) {
            if(employee instanceof IManager && employee.getTimePeriod() == TimePeriods.MONTHLY) {
                Manager manager = (Manager) employee;
                PayrollReportItem payrollReportItem = new PayrollReportItem(manager, manager.getBaseSalary(), OCAProject.getCurrentDates().getMonthlyCal().getTime(), manager.getTimePeriod());
                PayrollReportsForm.setpayRollReportItems(payrollReportItem);
            }
            else if (employee instanceof IManager == false && employee.getTimePeriod() == TimePeriods.MONTHLY){
                SalariedSubordinate salariedSubordinate = (SalariedSubordinate) employee;
                PayrollReportItem payrollReportItem = new PayrollReportItem(salariedSubordinate, salariedSubordinate.getBaseSalary(), OCAProject.getCurrentDates().getMonthlyCal().getTime(), employee.getTimePeriod());
                PayrollReportsForm.setpayRollReportItems(payrollReportItem);
            }
        }
        OCAProject.getCurrentDates().addMonthlyCal(numOfDaysToIncrement);
    }//GEN-LAST:event_btnMonthlyPaymentsActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Details_DataEntryForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Details_DataEntryForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Details_DataEntryForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Details_DataEntryForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    try {
                        new Details_DataEntryForm().setVisible(true);
                    } catch (IOException ex) {
                        Logger.getLogger(Details_DataEntryForm.class.getName()).log(Level.SEVERE, null, ex);
                    }
                } catch (ParseException ex) {
                    Logger.getLogger(Details_DataEntryForm.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnAssignBonus1;
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnClose1;
    private javax.swing.JButton btnDetails_DataEntry1;
    private javax.swing.JButton btnFortnightlyPayments;
    private javax.swing.JButton btnMonthlyPayments;
    private javax.swing.JButton btnRun_Reports1;
    private javax.swing.JComboBox cboName;
    private javax.swing.JFrame jFrame1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblAddPayments1;
    private javax.swing.JLabel lblBestITPayroll1;
    private javax.swing.JLabel lblContractor;
    private javax.swing.JLabel lblDOB;
    private javax.swing.JLabel lblHourlyRate;
    private javax.swing.JLabel lblHoursOfWork;
    private javax.swing.JLabel lblName;
    private javax.swing.JLabel lblPayPeriodOrBaseSalary;
    private javax.swing.JLabel lblPersonalInformation;
    private javax.swing.JLabel lblSalariedOrContractor;
    private javax.swing.JLabel lblStartDate;
    private javax.swing.JLabel lblTimePeriod;
    private javax.swing.JList lstContractor;
    private javax.swing.JTextField txtDOB;
    private javax.swing.JTextField txtHourlyRate;
    private javax.swing.JTextField txtHoursOfWork;
    private javax.swing.JTextField txtPayPeriodOrBaseSalary;
    private javax.swing.JTextField txtStartDate;
    private javax.swing.JTextField txtTimePeriods;
    // End of variables declaration//GEN-END:variables
}
